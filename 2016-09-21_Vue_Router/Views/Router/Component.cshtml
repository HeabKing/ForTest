@{
    Layout = null;
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <a href="/router/params">Params</a>
    <div id="app">
        <h1>{{msg}}</h1>
        <p>
            <!-- 使用指令 v-link 进行导航。 -->
            <a v-link="{ path: '/foo' }">Go to Foo</a>
            <a v-link="{ path: '/bar' }">Go to Bar</a>
        </p>
        <!-- 路由外链 -->
        <router-view></router-view>
    </div>
    <script src="~/lib/vue/dist/vue.js"></script>
    <script src="~/lib/vue-router/dist/vue-router.js"></script>
    <script>
        // 定义组件
        var Foo = Vue.extend({
            template: '<p>This is foo!</p>'
        });

        var Bar = Vue.extend({
            template: '<p>This is bar!</p>'
        });

        // 创建一个路由器实例
        // 创建实例时可以传入配置参数进行定制，为保持简单，这里使用默认配置
        var router = new VueRouter();

        // 定义路由规则
        // 每条路由规则应该映射到一个组件。这里的“组件”可以是一个使用 Vue.extend
        // 创建的组件构造函数，也可以是一个组件选项对象。
        // 稍后我们会讲解嵌套路由
        router.map({
            '/foo': {
                component: Foo
            },
            '/bar': {
                component: Bar
            }
        });
        Vue.use(router);
        var v = new Vue({
            el: "#app",
            data: {
                msg: "dfasfdsa"
            }
        });
    </script>
</body>
</html>